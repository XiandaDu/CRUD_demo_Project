功能需求

学生数据的列表展示、新增、编辑、删除
搜索和筛选学生信息
分页显示学生数据
对学生数据进行导入和导出
学生数据的详细信息展示
教师数据的列表展示、新增、编辑、删除
分配或取消教师对学生的监督关系
同时记录学生与教师的相关操作日志
数据库设计

学生表（students）
字段名	        数据类型	        说明
id	            int	            主键id
name	        varchar(32) 	学生姓名
gender	        varchar(4)	    性别
age	            int	            年龄
phone	        varchar(15)	    手机号码
addr	        varchar(128)	家庭地址
create_time	    datetime	    创建时间
update_time	    datetime	    最后更新时间

教师表（teachers）
字段名	        数据类型	        说明
id	            int	            主键id
name	        varchar(32)	    教师姓名
gender	        varchar(4)	    性别
age	            int	            年龄
inClass
title	        varchar(32)	    职称
phone	        varchar(15)	    手机号码
email	        varchar(64)	    邮箱
addr	        varchar(128)	家庭地址
create_time	    datetime	    创建时间
update_time	    datetime	    最后更新时间

操作日志表（operation_log）
字段名	    数据类型	        说明
id	        int	            主键id
action	    varchar(64)	    操作动作
obj_type	varchar(64)	    操作对象类型
obj_id	    int	            操作对象id，外键关联
create_time	datetime	    操作时间

API 设计
学生相关 API
GET /students：获取学生列表
POST /students：创建新学生数据
GET /students/{id}：获取指定 id 的学生信息
PUT /students/{id}：更新指定 id 的学生信息
DELETE /students/{id}：删除指定 id 的学生信息

教师相关 API
GET /teachers：获取教师列表
POST /teachers：创建新教师数据
GET /teachers/{id}：获取指定 id 的教师信息
PUT /teachers/{id}：更新指定 id 的教师信息
DELETE /teachers/{id}：删除指定 id 的教师信息

操作日志相关 API
GET /operation_log：获取所有操作日志列表
POST /operation_log：创建新的操作日志
GET /operation_log/{id}：获取指定 id 的操作日志信息
PUT /operation_log/{id}：更新指定 id 的操作日志信息
DELETE /operation_log/{id}：删除指定 id 的操作日志信息

{
    "name": {% mock 'name' %},
    "gender": {% 'pick' , ["Female", "Male", "NB"] %},
    "inClass": {% mock 'integer' , 202201 , 202214 %},
    "age": {% mock 'natural' , 9 , 16 %},
    "phone": {% mock 'integer' , 1000000000 , 9999999999 %},
    "addr": {% mock 'pick' , ["Alberta", "Manitoba", "Hamilton", "Markham", "Ottawa", "Scarbourough","Vancouver","Regina","Montreal","Quebec City","Saskatoon","Calgory","Victoria","Halifax","Fredicton","St. John","Waterloo","Kinston","London"] %}
}


git, Postman, ApiFox, Docker
Spring Framework, Vue.js
Maven, Jackson, JDBC, Jedis, MyBatis, ElementUI
Java, SQL, HTML, CSS, JavaScript / reflection, thread, generics, annotation / xml, yaml, json
MySQL, MongoDB, Redis

---------------------------------------------------------------------------
Java Foundation:
    IO, Reflection, Annotation, Generics, Thread

Big Demo project:
    Spring Framework:
        REST, Interface, MyBatis, CRUD
    Vue.js:
        .vue File Structure, vue router
    Database:
        MySQL, Redis

Docker:
   Docker Image, Docker Container

API connection:
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
---------------------------------------------------------------------------